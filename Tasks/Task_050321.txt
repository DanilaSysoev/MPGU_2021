I. Структура данных "Стэк"
--------------------------------------------------------------------------------
1. В один из проектов, созданных ранее, добавить обобщенный класс Stack.
3. Реализовать для класса Stack интерфейс стэка, описанный на занятии, используя  
   Все ошибки должны обрабатываться порождением исключений. Способ реализации 
   (на массиве или списке) обределяется фамилией студента. Если номер первой 
   буквы фамилии четный - реализация на массиве. Если нечентый - на списке. Для 
   реализации использовать свой класс массива / списка, созданный ранее. Буквы 
   в алфавите нумеруем с нуля ('А' имеет номер 0).
   ВАЖНО! После реализации каждой функции нужно сделать коммит с соответствующим
   описанием. После внесения изменений в функцию(например исправление ошибки)
   нужно сделать коммит с соответствующим описанием. 
   Все изменения в репозитории заливаем в удаленный репозиторий на github
================================================================================

II. Тестирование
--------------------------------------------------------------------------------
1. Подготовить для класса Stack комплект тестов. В качестве параметра
   типа используйте Integer.
   Тесты должны соответствовать правилам, описанным на занятии. 
   Убедитесь, что протестировали все граничные случаи.
   Все тесты должны проходить.
   После создания или изменения теста нужно сделать коммит с соответствующим
   описанием. 
================================================================================

III. Завершение
--------------------------------------------------------------------------------
1. По завершении задания создать коммит с названием "Task 3 complete"
================================================================================